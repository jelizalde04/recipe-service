name: Deploy Recipe Create Microservice

on:
  push:
    branches:
      - test
    paths:
      - 'recipe-create-microservice/**'

jobs:
  deploy-recipe-create:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout código
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and push Docker image for recipe-create-microservice
      - name: Build and push Docker image for recipe-create-microservice
        run: |
          cd recipe-create-microservice
          docker build -t ${{ secrets.DOCKER_USERNAME }}/recipe-create-microservice .
          docker push ${{ secrets.DOCKER_USERNAME }}/recipe-create-microservice:latest

      # 5. Set up SSH key for deployment
      - name: Set up SSH key for deployment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_RECIPE_CREATE }} >> ~/.ssh/known_hosts

      # 6. SSH to EC2 and deploy
      - name: SSH to EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_RECIPE_CREATE }} << 'EOF'
            echo "Iniciando despliegue en EC2..."

            # Detener y eliminar contenedor anterior si existe
            docker stop recipe-create-microservice || true
            docker rm recipe-create-microservice || true

            # Pull del nuevo contenedor desde DockerHub
            docker pull ${{ secrets.DOCKER_USERNAME }}/recipe-create-microservice:latest

            # Ejecutar el contenedor en el puerto 6000 con variables de entorno
            docker run -d -p 6000:6000 --name recipe-create-microservice \
              -e DB_RECIPES_HOST=${{ secrets.DB_RECIPES_HOST }} \
              -e DB_RECIPES_NAME=${{ secrets.DB_RECIPES_NAME }} \
              -e DB_RECIPES_USER=${{ secrets.DB_RECIPES_USER }} \
              -e DB_RECIPES_PASS=${{ secrets.DB_RECIPES_PASS }} \
              -e DB_USERS_HOST=${{ secrets.DB_USERS_HOST }} \
              -e DB_USERS_NAME=${{ secrets.DB_USERS_NAME }} \
              -e DB_USERS_USER=${{ secrets.DB_USERS_USER }} \
              -e DB_USERS_PASS=${{ secrets.DB_USERS_PASS }} \
              -e DB_SSL_MODE=require \
              ${{ secrets.DOCKER_USERNAME }}/recipe-create-microservice:latest

            echo "Despliegue completo. El contenedor está en ejecución en el puerto 6000."
          EOF
